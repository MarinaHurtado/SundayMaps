;FUNCIÓN QUE INICIALIZA LOS PARÁMETROS INCIALES Y DESENCADENA TODO EL PROGRAMA   
;@PARAM EDOINICIAL: ESTADO INICIAL DEL PROBLEMA, DEL NODO QUE PARTES.
;       EDOFINAL: ESTADO FINAL DEL PROBLEMA, NODO AL QUE QUIERES 
 (DEFUN AESTRELLA (EDOINICIAL EDOFINAL NUMERO)
    (SETQ ESTADOFINAL EDOFINAL CERRADO NIL ABIERTO NIL NUMMAX NUMERO CF NIL EF NIL SALIDA NIL NUMENODO 1)
    (INSERTA (LIST '(1 0 0 0) (LIST EDOINICIAL))) 
    (ARBOL) 
    )


 ;FUNCIÓN QUE SACA EL PRIMER NODO DE ABIERTO, ANALIZA SI ESTÁ EN CERRADO Y SI NO LO MANDA EXPANDIR
(DEFUN ARBOL ()
    ((NULL ABIERTO) (PUSH EDOFINAL SALIDA) (REGRESA (CADAR EF)))
    (SETQ NODO (POP ABIERTO) PAP (CAAR NODO) COSTONODO (CAR(CDDDAR NODO)) NIVELNODO (CADDAR NODO)) 
    ((EQL (CAADR NODO) EDOFINAL) (INSERT-NTH NODO CERRADO (LENGTH CERRADO)) (ARBOL))
    (ENCERRADO NODO) 
    ((NOT ESTA)
        (SETQ CONEX (GET (CAADR NODO) CON))
        ((NULL CERRADO) (PUSH NODO CERRADO) (EXPANDE CONEX PAP COSTONODO NIVELNODO) (ARBOL))
        (INSERT-NTH NODO CERRADO (LENGTH CERRADO)) 
        (EXPANDE CONEX PAP COSTONODO NIVELNODO) (ARBOL))
    (ARBOL)
)


;FUNCIÓN QUE INICIALIZA PARÁMETROS INICIALES PARA FN2.
;@PARAM NAB: NODO A BUSCAR.
(DEFUN ENCERRADO (NAB)
    (SETQ CONT 0 CD (CAADR NAB)) 
    (FN2 CONT CD)
)


;FUNCIÓN QUE BUSCA SI LA CIUDAD YA FUE EXPANDIDA, ES DECIR, SI ESTÁ EN CERRADO.
;@PARAM CONT: CONTADOR PARA RECORRER CERRADO.
;       CID: CIUDAD A BUSCAR DENTRO DE CERRADO
(DEFUN FN2 (CONT CID)
    ((EQL(LENGTH CERRADO) CONT) (SETQ ESTA NIL))  
    (SETQ CDAUX (CAADR(NTH CONT CERRADO))) 
    ((EQL CID CDAUX) (SETQ ESTA T)) 
  (FN2 (INCQ CONT) CID)
 )


;FUNCIÓN QUE EXPANDE LAS CONEXIONES DEL NODO ENVIADO DESDE ARBOL.
;@PARAM CONEXIONES: LISTA CON LAS CONEXIONES DEL NODO A EXPANDIR.
;       PAPA: VALOR DEL PAPA DE TODOS LOS NODOS QUE SE VAN A CREAR.
;       COSPA: VALOR DEL COSTO DEL PAPA DE TODOS LOS NODOS QUE SE VAN A CREAR.
;       NIVPA: VALOR DEL NIVEL DEL PAPA DE TODOS LOS NODOS QUE SE VAN A CREAR.
;       NUMNODO: VALOR DEL NÚMERO DE NODOS QUE SE HAN CREADO.
(DEFUN EXPANDE (CONEXIONES PAPA COSPA NIVPA)
    ((NULL CONEXIONES))
    (SETQ CONEXIO (POP CONEXIONES) 
    COSTOY (POP CONEXIONES)) 
    (COSTO COSPA COSTOY CONEXIO) 
    


        ((EQL CF NIL)
            ((EQL CONEXIO ESTADOFINAL) 
              (INCQ NUMENODO) 
              (SETQ CF COSNODO  AUX2 (+ 1 NIVPA) EF (LIST (LIST NUMENODO PAPA AUX2 COSNODO) (LIST CONEXIO)))
                            (INSERT-NTH EF CERRADO (LENGTH CERRADO))
                            (EXPANDE CONEXIONES PAPA COSPA NIVPA))


            (INCQ NUMENODO) 
            (SETQ AUX2 (+ 1 NIVPA) NOD (LIST (LIST NUMENODO PAPA AUX2 COSNODO) (LIST CONEXIO)))
            (INSERTA NOD)
            (EXPANDE CONEXIONES PAPA COSPA NIVPA))

        ((EQL CONEXIO ESTADOFINAL) ;SI EXISTE CF
            ((< COSNODO CF)
               (INCQ NUMENODO) 
              (SETQ CF COSNODO AUX2 (+ 1 NIVPA) EF (LIST (LIST NUMENODO PAPA AUX2 COSNODO) (LIST CONEXIO)))
                            (INSERT-NTH EF CERRADO (LENGTH CERRADO))
                            (EXPANDE CONEXIONES PAPA COSPA NIVPA))
            (EXPANDE CONEXIONES PAPA COSPA NIVPA))


        ((< COSNODO CF)
            (INCQ NUMENODO)
            (SETQ AUX2 (+ 1 NIVPA) NOD (LIST (LIST NUMENODO PAPA AUX2 COSNODO) (LIST CONEXIO)))
            (INSERTA NOD)
            (EXPANDE CONEXIONES PAPA COSPA NIVPA))
        (EXPANDE CONEXIONES PAPA COSPA NIVPA))
        


;FUNCIÓN QUE CALCULA EL COSTO DE UN NODO.
;@PARAM COSPAPA: COSTO DEL PAPÁ DEL NODO A EXPANDIR, LO QUE ME COSTÓ LLEGAR HASTA AQUI
;       COSYO: LO QUE COSTÓ LLEGAR DEL PAPÁ AL NODO A EXPANDIR.
;       YO: VALOR DEL NODO DEL QUE SE ESTÁ CALCULANDO EL COSTO.

(DEFUN COSTO (COSPAP COSYO YO)
    (SETQ COSRE (* 0.5 (CADR (ASSOC YO DISTANCIAS))) COSNODO (+ COSPAP COSYO COSRE)))


;FUNCIÓN QUE INICIALIZA PARÁMETROS INICIALES PARA FN.
;@PARAM NAI: NODO A INSERTAR.
(DEFUN INSERTA (NAI)
     (SETQ COSTON (CAR(CDDDAR NAI)) CONT 0)
     (FN NAI CONT COSTON)
)


;FUNCIÓN QUE INSERTA DE MANERA ORDENADA CON RESPECTO AL COSTO A ABIERTO LOS NUEVOS NODOS.
;@PARAM NAI: NODO A EXPANDIR.
;       CONT: CONTADOR PARA RECORRER ABIERTO.
;       COSTONO: COSTO DEL NODO A INSERTAR.

(DEFUN FN (NAI CONT COSTONO)
    ((NULL ABIERTO) (PUSH NAI ABIERTO))
    ((EQL (LENGTH ABIERTO) CONT) (INSERT-NTH NAI ABIERTO CONT)
    ((>= (LENGTH ABIERTO) NUMMAX)
                (DELETE-NTH ABIERTO(- (LENGTH ABIERTO) 1))))
    (SETQ COSTOAUX (CAR(CDDDAR(NTH CONT ABIERTO))))
    ((< COSTONO COSTOAUX) (INSERT-NTH NAI ABIERTO CONT)
        ((>= (LENGTH ABIERTO) NUMMAX)
                (DELETE-NTH ABIERTO(- (LENGTH ABIERTO) 1))))
    (FN NAI (INCQ CONT) COSTONO)
)


;FUNCIÓN QUE UNA VEZ VACIÓ ABIERTO REGRESA EL RESULTADO FINAL DE LA BÚSQUEDA.
;@PARAM ESTADO: NÚMERO DEL NODO QUE BUSCO EN CERRADO.
(DEFUN REGRESA (ESTADO) 
    
    ((EQL ESTADO 1) (PUSH EDOINICIAL SALIDA))
    (BUSCAFINAL ESTADO)
    (PUSH INSERTAR SALIDA)
    (REGRESA INSERTARPAPA)
)


;FUNCIÓN QUE INICIALIZA PARÁMETROS INICIALES PARA BUSCAFINAL1.
;@PARAM ESTADO1: NÚMERO DEL NODO QUE BUSCO EN CERRADO.
(DEFUN BUSCAFINAL (ESTADO1) 
    (SETQ CONTA 0)
    (BUSCAFINAL1 CONTA ESTADO1)
)


;FUNCIÓN QUE REGRESA EL CONTENIDO DEL NUMERO DE NODO BUSCADO.
;@PARAM CONT: CONTADOR PARA RECORRER CERRADO.
;       ESTAD: NÚMERO DE NODO QUE SE BUSCA.
(DEFUN BUSCAFINAL1 (CONT ESTAD)
    (SETQ AUX (NTH CONT CERRADO) AUXNUM (CAAR AUX))
    ((EQL AUXNUM ESTAD) (SETQ INSERTAR (CAADR AUX) INSERTARPAPA (CADAR AUX)))
  (BUSCAFINAL1 (INCQ CONT) ESTAD)                                             ;Y INSERTARPAPA (NUMERO) PARA USAR EN REGRESA.
 )